name: Test

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # https://blog.rust-lang.org/2022/06/22/sparse-registry-testing.html
  CARGO_UNSTABLE_SPARSE_REGISTRY: false
  # https://doc.rust-lang.org/beta/cargo/reference/config.html#registriescrates-ioprotocol
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

jobs:
  Testing:
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        run: |
          python -m venv venv

      - name: "Test Rust"
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo test

      - name: Install tzfpy and test(Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          source venv/Scripts/activate
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          maturin develop --release --extras=pytz
          pytest | tee benchmark_result.txt

      - name: Install tzfpy and test(Ubuntu&macoS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements_dev.txt
          maturin develop --release --extras=pytz
          pytest | tee benchmark_result.txt


      - name: Setup benchmark file name
        id: gen-benchmark-file-name
        shell: bash
        run: |
          echo "filename=tzfpy_benchmark_py_${{ matrix.python-version }}_${{ matrix.os }}.md" >> $GITHUB_OUTPUT

      - name: Report
        shell: bash
        run: |
          set +e
          echo "## Python ${{ matrix.python-version }} with ${{ matrix.os }}" >> ${{ steps.gen-benchmark-file-name.outputs.filename }}
          echo '```' >> ${{ steps.gen-benchmark-file-name.outputs.filename }}
          cat benchmark_result.txt >> ${{ steps.gen-benchmark-file-name.outputs.filename }}
          echo '```' >> ${{ steps.gen-benchmark-file-name.outputs.filename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: "benchmark_result_as_md"
          path: ${{ steps.gen-benchmark-file-name.outputs.filename }}

  Report:
    needs: [Testing]
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: "benchmark_result_as_md"
          path: ""

      - run: cat tzfpy_benchmark_*.md > $GITHUB_STEP_SUMMARY
